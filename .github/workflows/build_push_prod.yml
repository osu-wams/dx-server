name: Build and Push Server Application to AWS PRODUCTION
on:
  push:
    branches:
      - production

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: yarn install, lint, test
        run: |
          yarn install --frozen-lockfile
          yarn run lint
          yarn run test:coverage -w 1
        env:
          CI: true
          NODE_ENV: test
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          GITHUB_NPM_TOKEN: ${{ secrets.GH_NPM_TOKEN }}
      - name: report code coverage
        run: npx codecov@3
        if: matrix.node-version == '14.x'
        env:
          CI: true
          NODE_ENV: test
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          GITHUB_NPM_TOKEN: not-actually-used-but-necessary-here
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Run deploy-playbook
        uses: osu-wams/action-ansible-playbook@v2
        with:
          playbook: deploy-playbook.yaml
          directory: .github/ansible
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          CLOUDFORMATION_BUCKET: ${{ secrets.CLOUDFORMATION_BUCKET }}
          CLOUDFORMATION_STACKNAME: 'osu-dx-production'
          CLOUDFORMATION_PARAMETERS_FILE: 'parameters-production.json'
          CLOUDFORMATION_TEMPLATE_FILE: 'full-stack.yml'
          CLUSTER: 'production'
          ECR_REPOSITORY: 'dx'
          GITHUB_NPM_TOKEN: ${{ secrets.GH_NPM_TOKEN }}
          TEAMS_WAMS_CICD_HOOK_URL: ${{ secrets.TEAMS_WAMS_CICD_HOOK_URL }}
